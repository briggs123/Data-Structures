#include<stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>
void display();
void count();
void serch();
struct node
{
    int info;
    struct node *link;
};
struct node*start=NULL;
struct node* add_beg(struct node*start,int data)
{
    struct node*temp;
    temp=(struct node*)malloc(sizeof(struct node));
    temp->info=data;
    temp->link=start;
    start=temp;
}
struct node* add_end(struct node*start,int data)
{
    struct node*temp;
    struct node*p;
    p=start;
    temp=(struct node*)malloc(sizeof(struct node));
    temp->info=data;
    while(p->link!=NULL)
    {
       p=p->link;  
    }
    p->link=temp;
    temp->link=NULL;
}
struct node *create(struct node*start)
{
    int i,n,data;
    printf("enter number of linked lists u want to create");
    scanf("%d",&n);
    printf("enter the starting data");
    scanf("%d",&data);
    start=add_beg(start,data);
    for(i=0;i<n;i++)
    {
        scanf("%d",&data);
        start=add_end(start,data);
    }
}
void display(struct node*start)
{
    struct node*p;
    p=start;
    while(p->link!=NULL)
    {
        printf("%d",p->info);
        p=p->link;
    }
}
void count(struct node*start)
{
    struct node*p;
    int count=0;
    p=start;
    while(p->link!=NULL)
    {
        count=count+1;
        p=p->link;
    }
    printf("%d",count);
}
void search(struct node*start,int ele)
{
    struct node*p;
    while(p->link!=NULL)
    {
        if (ele==p->info)
        {
            printf("number found");
            return;
        }
        p=p->link;
    }
    printf("element not found");
}
int main()
{
    create(NULL);
    display(start);
}
__________________________________________________________________________________________
#include<stdio.h>
#include<stdlib.h>
int main()
{
    struct node
    {
        int data;
        struct node *link;
    };
    struct node *start;
    start=NULL;
    struct node *temp,*p;
    int choice=1;
    while(choice==1)
    {
    temp=(struct node *)malloc(sizeof(struct node));
    printf("enter the data in linked lists");
    scanf("%d",&temp->data);
    temp->link=NULL;
    if(start==NULL)
    {
        start=p=temp;
    }
    else
    {
        p->link=temp;
        p=temp;
    }
    printf("enter \n 1 to continue \n 0 to print data");
    scanf("%d",&choice);
    }
    printf("printing data\n");
    p=start;
    while(p!=NULL)
    {
        printf("%d",p->data);
        p=p->link;
    }
}
------------------------------------------------------------------------------------------------------
void add_beg();
void add_end();
void display();
void delete_beg();
void delete_end();
#include<stdio.h>
#include<stdlib.h>
struct node 
{
    int info;
    struct node *link;
};
struct node *start=NULL;
void create()
{
    struct node *temp,*p;
    int choice=1;
    while(choice==1)
    {
    temp=(struct node *)malloc(sizeof(struct node));
    if(temp==NULL)
    {
        printf("no memory");
    }
    else
    {
        printf("enter the node values");
        scanf("%d",&temp->info);
        temp->link=NULL;
    }
    if(start==NULL)
    {
        start=temp;
    }
    else
    {
        p=start;
        while(p->link!=NULL)
        {
            p=p->link;
        }
        p->link=temp;
    }
    printf("to continue press 1\nto exit creation press any number");
    scanf("%d",&choice);
    }
}
void add_beg()
{
    struct node *temp,*p;
    temp=(struct node *)malloc(sizeof(struct node));
    printf("enter the node to insert at beginning");
    scanf("%d",&temp->info);
    temp->link=NULL;
    if(start==NULL)
    {
        start=temp;
    }
    else
    {
        temp->link=start;
        start=temp;
    }
}
void add_end()
{
    struct node *temp,*p;
    temp=(struct node *)malloc(sizeof(temp));
    printf("enter the node");
    scanf("%d",&temp->info);
    temp->link=NULL;
    p=start;
    while(p->link!=NULL)
    {
        p=p->link;
    }
    p->link=temp;
}
void display()
{
    struct node *p;
    p=start;
    while(p!=NULL)
    {
        printf("%d",p->info);
        p=p->link;
    }
}
void count()
{
    struct node *p;
    int count;
    p=start;
    while(p!=NULL)
    {
        p=p->link;
        count=count+1;
    }
    printf("\nnumber of nodes in the linked list are %d",count);
}
void search()
{
    struct node *p;
    int num;
    printf("enter the number you want to search for");
    scanf("%d",&num);
    p=start;
    while(p!=NULL)
    {
        if(p->info==num)
        {
            printf("number found %d",p->info);
            break;
        }
    }
    printf("number not found");
}
void delete_beg()
{
    if(start==NULL)
    {
        printf("there are no nodes");
    }
    else
    {
    struct node *temp,*p;
    temp=start;
    start=start->link;
    free(temp);
    }
}
void delete_end()
{
    struct node *temp,*p;
    if(start==NULL)
    {
        printf("no nodes");
    }
    else if(start->link==NULL)
    {
        temp=start;
        start=NULL;
        free(temp);    
    }
    else
    {
        p=start;
        while(p->link!=NULL)
        {
            temp=p;
            p=p->link;
        }
        temp->link=NULL;
        free(p);
    }
}
int main()
{
    while(1)
    {
    int choice;
    printf("\n1-CREATE");
    printf("\n2-add at the beginning");
    printf("\n3-add at the end of the list");
    printf("\nenter at certain positions");
    printf("\n4-display");
    printf("\n5-delete at beginning");
    printf("\n6-delete at the end");
    printf("\n7-to stop the process ");
    printf("\nenter your choice depending on the functions");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1: 
        create();
        break;
        case 2:
        add_beg();
        break;
        case 3:
        add_end();
        break;
        case 4:
        display();
        break;
        case 5:
        delete_beg();
        break;
        case 6:
        delete_end();
        break;
        case 7:
        exit(0);
        default:
        printf("enter correct number");
        break;
    };
    }
}
