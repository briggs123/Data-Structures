#include<stdio.h>
#include<stdlib.h>
void dsisplay();
struct node
{
    struct node *prev;
    int info;
    struct node *next;
};
struct node *addafter(struct node *start,int data,int item);
struct node *addbefore(struct node *start,int data ,int item);
struct node *del(struct node *start,int data);
struct node *reverse(struct node *start);
struct node *addatbeg(struct node *start,int data);
struct node *addatend(struct node *start,int data);
struct node *addtoempty(struct node *start,int data);
struct node *create_list(struct node *start)
{
    int i,n,data;
    printf("Enter the number of nodes: ");
    scanf("%d",&n);
    start=NULL;
    if(n==0)
            return start;
    printf("enter the element to be inserted :");
    scanf("%d",&data);
    start=addtoempty(start,data);
    for(i=2;i<=n;i++)
    {
        printf("enter the element to be inserted :");
        scanf("%d",&data);
        start=addatend(start,data);
    }
    return start;
}
struct node *display(struct node *start)
{
    struct node *p;
    if(start==NULL)
    {
        printf("List is empty\n");
        return start;
    }
    p =start;
    printf("List is :\n");
    while(p!=NULL)
    {
        printf("%d",p->info);
        p = p->next;
    }
}
struct node *addtoempty(struct node *start,int data)
{
    struct node *temp;
    temp = (struct node *)malloc(sizeof(struct node));
    temp->info = data;
    temp->prev = NULL;
    temp->next =NULL;
    start=temp;
    return start;
}
struct node *addatbeg(struct node *start,int data)
{
    struct node*temp;
    temp = (struct node *)malloc(sizeof (struct node));
    temp->info = data;
    temp->prev = NULL;
    temp->next = start;
    start->prev = temp;
    start = temp;
    return start;
}
struct node *addatend(struct node *start,int data)
{
    struct node*temp,*p;
    temp = (struct node *)malloc(sizeof(struct node));
    temp->info = data;
    p = start;
    while(p->next!=NULL)
    p = p->next;
    p->next = temp;
    temp->next = NULL;
    temp->prev = p;
    return start;
}
int main()
   {
      int choice,data,item;
      struct node *start=NULL;
      while(1)
      {
            printf("1.create list\n");
            printf("2.Display\n");
            printf("3.Add to empty list\n");
            printf("4.Add at beginning\n");
            printf("5.Add at end\n");
            printf("6.Add after\n");
            printf("7.Add before\n");
            printf("8.Delete\n");
            printf("9.Reverse\n");
            printf("10.Quit\n");
            printf("Enter your choice :");
            scanf("%d",&choice);

            switch(choice)
            {
            case 1:
                  start=create_list(start);
                  break;
            case 2:
                  display(start);
                  break;
            case 3:
                  printf("Enter the element to be instered :");
                  scanf("%d",&data);
                  start =addtoempty(start,data);
                  break;
           case 4:
                 printf("Enter the element to be instered :");
                 scanf("%d",&data);
                 start=addatbeg(start,data);
                 break;     
           case 5:
                 printf("Enter the element to be instered :");
                 scanf("%d",&data);
                 start=addatend(start,data);
                 break;    
           case 6:
                 printf("Enter the element to be instered :");
                 scanf("%d",&data);
                 printf("Enter the element after which to instered :");
                 scanf("%d",&item);
                 start=addafter(start,data,item);
                 break;
           case 7:
                 printf("Enter the element to be instered :");
                 scanf("%d",&data);
                 printf("Enter the element before which to instered :");
                 scanf("%d",&item);
                 start=addbefore(start,data,item);
                 break;
           case 8:
                 printf("Enter the element to be deleted :");
                 scanf("%d",&data);
                 start=del(start,data);
                 break;
           case 9:
                 start=reverse(start);
                 break;
          case 10:
                 exit(0);
          default:
                 printf("wrong choice\n");    
            }
    
        }        

    }
